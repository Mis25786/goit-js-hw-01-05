//! Завдання 1 створення змінної

// Змінні використовуються для зберігання даних. У кожної змінної є ідентифікатор (назва змінної). Значення кожної змінної зберігається в оперативній пам'яті.

// Змінну можна уявити як коробку з написом (ім'я змінної), в якій щось знаходиться (значення змінної).

// <ключове слово> <назва змінної> = <значення>
// Оголошення змінної починається з ключового слова const. Така змінна має бути одразу ініціалізована початковим значенням, і такій змінній не можна надати інше значення після її ініціалізації.

// Увага
// Створення змінної без ключового слова const призведе до помилки.

// const age = 20;
// const userName = "Mango";
// const socialProfileTag = "@gluck";
// const totalWorkerSalary = 4052;
// В JavaScript назва змінної записується в camelCase-нотації. Перше слово пишеться маленькими буквами, а кожне наступне починається з великої. Назви змінних чутливі до регістру, тобто user, usEr і User - це різні змінні.

//todo Оголоси дві змінні, productName для назви товару, і pricePerItem для зберігання ціни за штуку.
//todo При оголошенні надай змінним наступні значення:

//todo назва - рядок "Droid";
//todo ціна за штуку - число 2000.

//* Оголошена змінна productName
//* Значення змінної productName - це рядок "Droid"
//* Оголошена змінна pricePerItem
//* Значення змінної pricePerItem - це число 2000

// const productName = "Droid";
// console.log(productName);

// const pricePerItem = 2000;
// console.log(pricePerItem);

//! Завдання 2 змінити значення змінним
// Для того щоб оголосити змінну, якій у майбутньому можна буде присвоїти нове значення, використовується ключове слово let. Створення змінної без ключового слова let або const призведе до помилки.

// let age = 5;
// age = 10;

// let username = "Mango";
// username = "Poly";
// Спроба звернутися до змінної за ім'ям до її оголошення, викличе помилку.

// Наприклад, не можна намагатися прочитати або змінити значення змінної до її оголошення:

// ❌ Неправильно, буде помилка
// age = 15; // ReferenceError: Cannot access 'age' before initialization
// console.log(age); // ReferenceError: age is not defined

// Оголошення змінної age
// let age = 20;

// ✅ Правильно, звертаємося після оголошення
// age = 25;
// console.log(age); // 25

//todo Ім'я товару змінили на "Repair droid" і збільшили його ціну на 1500 кредитів.
//todo Перевизнач значення змінних pricePerItem і productName після їх оголошення.

//* Змінна pricePerItem оголошена за допомогою let
//* При оголошенні змінної pricePerItem присвоєно значення — число 2000
//* Змінній pricePerItem присвоєно нове значення, більше за попереднє на 1500
//* Змінна productName оголошена за допомогою let
//* При оголошенні змінної productName присвоєно значення — рядок "Droid"
//* Змінній productName присвоєно нове значення — рядок "Repair droid"

// let productName = "Droid";
// let pricePerItem = 2000;

// productName = "Repair droid";
// console.log(productName);
// pricePerItem = 3500;
// console.log(pricePerItem);

// Change code below this line

//! Завдання 3 створення змінних: число, рядок, буль
// В JavaScript змінна не асоціюється з будь-яким типом даних, тип є у її значення. Тобто змінна може зберігати значення різних типів.

// Number - цілі числа і числа з плаваючою комою (крапкою).
// String - рядки, послідовність від нуля або більше символів. Рядок починається і закінчується одинарною ' або подвійними лапками ".
// Boolean - логічний тип даних, прапорці стану. Всього два значення: true і false. Наприклад, на питання, чи увімкнено світло в кімнаті, можна відповісти так (true) або ні (false).
//todo Оголоси наступні змінні, використовуючи ключове слово const або let, і присвой їм відповідні значення.

//todo topSpeed - число 160.
//todo distance - число 617.54.
//todo login - рядок "mango935".
//todo isOnline - буль true.
//todo isAdmin - буль false.

//* Оголошена змінна topSpeed
//* Значення змінної topSpeed - це число 160
//* Оголошена змінна distance
//* Значення змінної distance - це число 617.54
//* Оголошена змінна login
//* Значення змінної login - це рядок "mango935"
//* Оголошена змінна isOnline
//* Значення змінної isOnline - це буль true
//* Оголошена змінна isAdmin
//* Значення змінної isAdmin - це буль false

// let topSpeed = 160;
// console.log(topSpeed);
// let distance = 617.54;
// console.log(distance);
// const login = "mango935";
// console.log("mango935");
// const isOnline = true;
// console.log(isOnline);
// const isAdmin = false;
// console.log(isAdmin);

//! Завдання 4
// Призначення, функціонал і пріоритет (порядок) операцій нічим не відрізняються від шкільного курсу алгебри. Оператори повертають значення як результат виразу.

// const x = 10;
// const y = 5;

// // Додавання
// console.log(x + y); // 15

// // Віднімання
// console.log(x - y); // 5

// // Множення
// console.log(x * y); // 50

// // Ділення
// console.log(x / y); // 2
// Корисно
// Важливо запам'ятати правильне іменування складових алгебраїчного виразу: +, -, * і / називаються операторами, а те, на чому вони застосовуються (числа) - операнди.

//todo Доповни код, присвоївши змінній totalPrice вираз для підрахунку загальної суми замовлення. Змінна pricePerItem зберігає ціну однієї одиниці товару, а orderedQuantity - кількість одиниць товару в замовленні.

//* Значення змінної pricePerItem - це число 3500
//* Оголошена змінна orderedQuantity
//* Оголошена змінна pricePerItem
//* Значення змінної orderedQuantity - це число 4
//* Оголошена змінна totalPrice
//* Значення змінної totalPrice - це число 14000
//* Використаний оператор *

let totalPrice = pricePerItem * orderedQuantity;
console.log(totalPrice);

const pricePerItem = 3500;
const orderedQuantity = 4;

//! Завдання
//todo

//! Завдання
//todo
